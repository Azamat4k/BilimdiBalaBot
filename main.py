
import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv
import os

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMINS = os.getenv("ADMINS", "").split(",")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

user_lang = {}

kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.add(KeyboardButton("üèÅ –¢—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É / –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"))

@dp.message_handler(lambda msg: msg.text in ["üèÅ –¢—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É / –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"])
async def choose_language(message: types.Message):
    kb_lang = ReplyKeyboardMarkup(resize_keyboard=True)
    kb_lang.add(KeyboardButton("“ö–∞–∑–∞“õ—à–∞"), KeyboardButton("–†—É—Å—Å–∫–∏–π"))
    await message.answer("–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=kb_lang)

@dp.message_handler(lambda msg: msg.text in ["“ö–∞–∑–∞“õ—à–∞", "–†—É—Å—Å–∫–∏–π"])
async def set_language(message: types.Message):
    lang = "kz" if message.text == "“ö–∞–∑–∞“õ—à–∞" else "ru"
    user_lang[message.from_user.id] = lang
    await main_menu(message)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    user_lang[message.from_user.id] = "kz"
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é / –ë–∞—Å—Ç—ã –º”ô–∑—ñ—Ä:", reply_markup=kb)
    await main_menu(message)

@dp.message_handler(lambda msg: msg.text in [
    "üß† –û–ª–∏–º–ø–∏–∞–¥–∞", "üìö –ö—É—Ä—Å—Ç–∞—Ä", "‚ùì –°“±—Ä–∞“õ “õ–æ—é", "üìû –ë–∞–π–ª–∞–Ω—ã—Å", "‚ù§Ô∏è “ö–∞–π—ã—Ä—ã–º–¥—ã–ª—ã“õ",
    "üó£ –¢—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É", "üìö –ö—É—Ä—Å—ã", "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "‚ù§Ô∏è –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "üó£ –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"])
async def main_menu(message: types.Message):
    lang = user_lang.get(message.from_user.id, "kz")
    responses = {
        "kz": {
            "üß† –û–ª–∏–º–ø–∏–∞–¥–∞": "–û–ª–∏–º–ø–∏–∞–¥–∞ —Ç—É—Ä–∞–ª—ã –∞“õ–ø–∞—Ä–∞—Ç: https://bilimdibala.kz/olympiada",
            "üìö –ö—É—Ä—Å—Ç–∞—Ä": "–ë–∞—Ä–ª—ã“õ –∫—É—Ä—Å—Ç–∞—Ä: –º–µ–Ω—Ç–∞–ª–¥—ã –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞, –∫–∞–ª–ª–∏–≥—Ä–∞—Ñ–∏—è, –∞“ì—ã–ª—à—ã–Ω —Ç—ñ–ª—ñ —Ç.–±.",
            "‚ùì –°“±—Ä–∞“õ “õ–æ—é": "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –±—ñ–∑–≥–µ –∂–∞–∑—ã“£—ã–∑.",
            "üìû –ë–∞–π–ª–∞–Ω—ã—Å": "–¢–µ–ª: +7 777 777 7777 | Instagram: @bilimdibala.shchuchinsk",
            "‚ù§Ô∏è “ö–∞–π—ã—Ä—ã–º–¥—ã–ª—ã“õ": "“ö–∞–π—ã—Ä—ã–º–¥—ã–ª—ã“õ —Ç—É—Ä–∞–ª—ã: https://bilimdibala.kz/fund"
        },
        "ru": {
            "üß† –û–ª–∏–º–ø–∏–∞–¥–∞": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ª–∏–º–ø–∏–∞–¥–µ: https://bilimdibala.kz/olympiada",
            "üìö –ö—É—Ä—Å—ã": "–ö—É—Ä—Å—ã: –º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞, –∫–∞–ª–ª–∏–≥—Ä–∞—Ñ–∏—è, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ –∏ –¥—Ä.",
            "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å": "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∑–¥–µ—Å—å.",
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã": "–¢–µ–ª: +7 777 777 7777 | Instagram: @bilimdibala.shchuchinsk",
            "‚ù§Ô∏è –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å": "–û —Ñ–æ–Ω–¥–µ: https://bilimdibala.kz/fund"
        }
    }
    text = responses[lang].get(message.text, "“ö–∞—Ç–µ –∫–æ–º–∞–Ω–¥–∞ / –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
    await message.answer(text, reply_markup=kb)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    executor.start_polling(dp, skip_updates=True)
